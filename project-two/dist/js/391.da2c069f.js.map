{"version":3,"file":"js/391.da2c069f.js","mappings":"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","sources":["webpack://project-two/./src/components/dataAnalysis/ScoreMap.vue","webpack://project-two/src/components/dataAnalysis/ScoreMap.vue","webpack://project-two/./src/components/dataAnalysis/ScoreMap.vue?5e9e","webpack://project-two/./src/components/dataAnalysis/ScoreMap.vue?28ca"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"score-map\"},[_c('div',{attrs:{\"id\":\"main\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"score-map\">\r\n        <div id=\"main\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport chinaJson from 'echarts/map/json/china'\r\nexport default {\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        let myChart = this.$echarts.init(document.getElementById('main'))\r\n        this.$echarts.registerMap('china', chinaJson)//地图要注册\r\n        //别人的代码开始复制\r\n        var name_title = \"中国人民大学2017年各省市计划录取人数\"\r\n        var subname = '高考2017'\r\n        var nameColor = \" rgb(55, 75, 113)\"\r\n        var name_fontFamily = '等线'\r\n        var subname_fontSize = 15\r\n        var name_fontSize = 18\r\n        var mapName = 'china'\r\n        var data = [\r\n            { name: \"北京\", value: 177 },\r\n            { name: \"天津\", value: 42 },\r\n            { name: \"河北\", value: 102 },\r\n            { name: \"山西\", value: 81 },\r\n            { name: \"内蒙古\", value: 47 },\r\n            { name: \"辽宁\", value: 67 },\r\n            { name: \"吉林\", value: 82 },\r\n            { name: \"黑龙江\", value: 66 },\r\n            { name: \"上海\", value: 24 },\r\n            { name: \"江苏\", value: 92 },\r\n            { name: \"浙江\", value: 114 },\r\n            { name: \"安徽\", value: 109 },\r\n            { name: \"福建\", value: 116 },\r\n            { name: \"江西\", value: 91 },\r\n            { name: \"山东\", value: 119 },\r\n            { name: \"河南\", value: 137 },\r\n            { name: \"湖北\", value: 116 },\r\n            { name: \"湖南\", value: 114 },\r\n            { name: \"重庆\", value: 91 },\r\n            { name: \"四川\", value: 125 },\r\n            { name: \"贵州\", value: 62 },\r\n            { name: \"云南\", value: 83 },\r\n            { name: \"西藏\", value: 9 },\r\n            { name: \"陕西\", value: 80 },\r\n            { name: \"甘肃\", value: 56 },\r\n            { name: \"青海\", value: 10 },\r\n            { name: \"宁夏\", value: 18 },\r\n            { name: \"新疆\", value: 67 },\r\n            { name: \"广东\", value: 123 },\r\n            { name: \"广西\", value: 59 },\r\n            { name: \"海南\", value: 14 },\r\n        ];\r\n\r\n        var geoCoordMap = {};\r\n        var toolTipData = [\r\n            { name: \"北京\", value: [{ name: \"文科\", value: 95 }, { name: \"理科\", value: 82 }] },\r\n            { name: \"天津\", value: [{ name: \"文科\", value: 22 }, { name: \"理科\", value: 20 }] },\r\n            { name: \"河北\", value: [{ name: \"文科\", value: 60 }, { name: \"理科\", value: 42 }] },\r\n            { name: \"山西\", value: [{ name: \"文科\", value: 40 }, { name: \"理科\", value: 41 }] },\r\n            { name: \"内蒙古\", value: [{ name: \"文科\", value: 23 }, { name: \"理科\", value: 24 }] },\r\n            { name: \"辽宁\", value: [{ name: \"文科\", value: 39 }, { name: \"理科\", value: 28 }] },\r\n            { name: \"吉林\", value: [{ name: \"文科\", value: 41 }, { name: \"理科\", value: 41 }] },\r\n            { name: \"黑龙江\", value: [{ name: \"文科\", value: 35 }, { name: \"理科\", value: 31 }] },\r\n            { name: \"上海\", value: [{ name: \"文科\", value: 12 }, { name: \"理科\", value: 12 }] },\r\n            { name: \"江苏\", value: [{ name: \"文科\", value: 47 }, { name: \"理科\", value: 45 }] },\r\n            { name: \"浙江\", value: [{ name: \"文科\", value: 57 }, { name: \"理科\", value: 57 }] },\r\n            { name: \"安徽\", value: [{ name: \"文科\", value: 57 }, { name: \"理科\", value: 52 }] },\r\n            { name: \"福建\", value: [{ name: \"文科\", value: 59 }, { name: \"理科\", value: 57 }] },\r\n            { name: \"江西\", value: [{ name: \"文科\", value: 49 }, { name: \"理科\", value: 42 }] },\r\n            { name: \"山东\", value: [{ name: \"文科\", value: 67 }, { name: \"理科\", value: 52 }] },\r\n            { name: \"河南\", value: [{ name: \"文科\", value: 69 }, { name: \"理科\", value: 68 }] },\r\n            { name: \"湖北\", value: [{ name: \"文科\", value: 60 }, { name: \"理科\", value: 56 }] },\r\n            { name: \"湖南\", value: [{ name: \"文科\", value: 62 }, { name: \"理科\", value: 52 }] },\r\n            { name: \"重庆\", value: [{ name: \"文科\", value: 47 }, { name: \"理科\", value: 44 }] },\r\n            { name: \"四川\", value: [{ name: \"文科\", value: 65 }, { name: \"理科\", value: 60 }] },\r\n            { name: \"贵州\", value: [{ name: \"文科\", value: 32 }, { name: \"理科\", value: 30 }] },\r\n            { name: \"云南\", value: [{ name: \"文科\", value: 42 }, { name: \"理科\", value: 41 }] },\r\n            { name: \"西藏\", value: [{ name: \"文科\", value: 5 }, { name: \"理科\", value: 4 }] },\r\n            { name: \"陕西\", value: [{ name: \"文科\", value: 38 }, { name: \"理科\", value: 42 }] },\r\n            { name: \"甘肃\", value: [{ name: \"文科\", value: 28 }, { name: \"理科\", value: 28 }] },\r\n            { name: \"青海\", value: [{ name: \"文科\", value: 5 }, { name: \"理科\", value: 5 }] },\r\n            { name: \"宁夏\", value: [{ name: \"文科\", value: 10 }, { name: \"理科\", value: 8 }] },\r\n            { name: \"新疆\", value: [{ name: \"文科\", value: 36 }, { name: \"理科\", value: 31 }] },\r\n            { name: \"广东\", value: [{ name: \"文科\", value: 63 }, { name: \"理科\", value: 60 }] },\r\n            { name: \"广西\", value: [{ name: \"文科\", value: 29 }, { name: \"理科\", value: 30 }] },\r\n            { name: \"海南\", value: [{ name: \"文科\", value: 8 }, { name: \"理科\", value: 6 }] },\r\n        ];\r\n\r\n        /*获取地图数据*/\r\n        myChart.showLoading();\r\n        var mapFeatures = this.$echarts.getMap(mapName).geoJson.features;\r\n        myChart.hideLoading();\r\n        mapFeatures.forEach(function (v) {\r\n            // 地区名称\r\n            var name = v.properties.name;\r\n            // 地区经纬度\r\n            geoCoordMap[name] = v.properties.cp;\r\n\r\n        });\r\n\r\n        // console.log(\"============geoCoordMap===================\")\r\n        // console.log(geoCoordMap)\r\n        // console.log(\"================data======================\")\r\n        console.log(data)\r\n        console.log(toolTipData)\r\n        var max = 480,\r\n            min = 9; // todo \r\n        var maxSize4Pin = 100,\r\n            minSize4Pin = 20;\r\n\r\n        var convertData = function (data) {\r\n            var res = [];\r\n            for (var i = 0; i < data.length; i++) {\r\n                var geoCoord = geoCoordMap[data[i].name];\r\n                if (geoCoord) {\r\n                    res.push({\r\n                        name: data[i].name,\r\n                        value: geoCoord.concat(data[i].value),\r\n                    });\r\n                }\r\n            }\r\n            return res;\r\n        };\r\n       let option = {\r\n            title: {\r\n                text: name_title,\r\n                subtext: subname,\r\n                x: 'center',\r\n                textStyle: {\r\n                    color: nameColor,\r\n                    fontFamily: name_fontFamily,\r\n                    fontSize: name_fontSize\r\n                },\r\n                subtextStyle: {\r\n                    fontSize: subname_fontSize,\r\n                    fontFamily: name_fontFamily\r\n                }\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: function (params) {\r\n                    if (typeof (params.value)[2] == \"undefined\") {\r\n                        var toolTiphtml = ''\r\n                        for (let i = 0; i < toolTipData.length; i++) {\r\n                            if (params.name == toolTipData[i].name) {\r\n                                toolTiphtml += toolTipData[i].name + ':<br>'\r\n                                for (let j = 0; j < toolTipData[i].value.length; j++) {\r\n                                    toolTiphtml += toolTipData[i].value[j].name + ':' + toolTipData[i].value[j].value + \"<br>\"\r\n                                }\r\n                            }\r\n                        }\r\n                        console.log(toolTiphtml)\r\n                        // console.log(convertData(data))\r\n                        return toolTiphtml;\r\n                    } else {\r\n                        for (let i = 0; i < toolTipData.length; i++) {\r\n                            if (params.name == toolTipData[i].name) {\r\n                                toolTiphtml += toolTipData[i].name + ':<br>'\r\n                                for (let j = 0; j < toolTipData[i].value.length; j++) {\r\n                                    toolTiphtml += toolTipData[i].value[j].name + ':' + toolTipData[i].value[j].value + \"<br>\"\r\n                                }\r\n                            }\r\n                        }\r\n                        console.log(toolTiphtml)\r\n                        // console.log(convertData(data))\r\n                        return toolTiphtml;\r\n                    }\r\n                }\r\n            },\r\n            // legend: {\r\n            //     orient: 'vertical',\r\n            //     y: 'bottom',\r\n            //     x: 'right',\r\n            //     data: ['credit_pm2.5'],\r\n            //     textStyle: {\r\n            //         color: '#fff'\r\n            //     }\r\n            // },\r\n            visualMap: {\r\n                show: true,\r\n                min: 0,\r\n                max: 200,\r\n                left: 'left',\r\n                top: 'bottom',\r\n                text: ['高', '低'], // 文本，默认为数值文本\r\n                calculable: true,\r\n                seriesIndex: [1],\r\n                inRange: {\r\n                    // color: ['#3B5077', '#031525'] // 蓝黑\r\n                    // color: ['#ffc0cb', '#800080'] // 红紫\r\n                    // color: ['#3C3B3F', '#605C3C'] // 黑绿\r\n                    // color: ['#0f0c29', '#302b63', '#24243e'] // 黑紫黑\r\n                    // color: ['#23074d', '#cc5333'] // 紫红\r\n                    color: ['#00467F', '#A5CC82'] // 蓝绿\r\n                    // color: ['#1488CC', '#2B32B2'] // 浅蓝\r\n                    // color: ['#00467F', '#A5CC82'] // 蓝绿\r\n                    // color: ['#00467F', '#A5CC82'] // 蓝绿\r\n                    // color: ['#00467F', '#A5CC82'] // 蓝绿\r\n                    // color: ['#00467F', '#A5CC82'] // 蓝绿\r\n\r\n                }\r\n            },\r\n            /*工具按钮组*/\r\n            // toolbox: {\r\n            //     show: true,\r\n            //     orient: 'vertical',\r\n            //     left: 'right',\r\n            //     top: 'center',\r\n            //     feature: {\r\n            //         dataView: {\r\n            //             readOnly: false\r\n            //         },\r\n            //         restore: {},\r\n            //         saveAsImage: {}\r\n            //     }\r\n            // },\r\n            geo: {\r\n                show: true,\r\n                map: mapName,\r\n                label: {\r\n                    normal: {\r\n                        show: false\r\n                    },\r\n                    emphasis: {\r\n                        show: false,\r\n                    }\r\n                },\r\n                roam: true,\r\n                itemStyle: {\r\n                    normal: {\r\n                        areaColor: '#031525',\r\n                        borderColor: '#3B5077',\r\n                    },\r\n                    emphasis: {\r\n                        areaColor: '#2B91B7',\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: '散点',\r\n                type: 'scatter',\r\n                coordinateSystem: 'geo',\r\n                data: convertData(data),\r\n                symbolSize: function (val) {\r\n                    return val[2] / 10;\r\n                },\r\n                label: {\r\n                    normal: {\r\n                        formatter: '{b}',\r\n                        position: 'right',\r\n                        show: true\r\n                    },\r\n                    emphasis: {\r\n                        show: true\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: '#05C3F9'\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                type: 'map',\r\n                map: mapName,\r\n                geoIndex: 0,\r\n                aspectScale: 0.75, //长宽比\r\n                showLegendSymbol: false, // 存在legend时显示\r\n                label: {\r\n                    normal: {\r\n                        show: true\r\n                    },\r\n                    emphasis: {\r\n                        show: false,\r\n                        textStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                roam: true,\r\n                itemStyle: {\r\n                    normal: {\r\n                        areaColor: '#031525',\r\n                        borderColor: '#3B5077',\r\n                    },\r\n                    emphasis: {\r\n                        areaColor: '#2B91B7'\r\n                    }\r\n                },\r\n                animation: false,\r\n                data: data\r\n            },\r\n            {\r\n                name: '点',\r\n                type: 'scatter',\r\n                coordinateSystem: 'geo',\r\n                symbol: 'pin', //气泡\r\n                symbolSize: function (val) {\r\n                    var a = (maxSize4Pin - minSize4Pin) / (max - min);\r\n                    var b = minSize4Pin - a * min;\r\n                    b = maxSize4Pin - a * max;\r\n                    return a * val[2] + b;\r\n                },\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        textStyle: {\r\n                            color: '#fff',\r\n                            fontSize: 9,\r\n                        }\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: '#F62157', //标志颜色\r\n                    }\r\n                },\r\n                zlevel: 6,\r\n                data: convertData(data),\r\n            },\r\n            {\r\n                name: 'Top 5',\r\n                type: 'effectScatter',\r\n                coordinateSystem: 'geo',\r\n                data: convertData(data.sort(function (a, b) {\r\n                    return b.value - a.value;\r\n                }).slice(0, 5)),\r\n                symbolSize: function (val) {\r\n                    return val[2] / 10;\r\n                },\r\n                showEffectOn: 'render',\r\n                rippleEffect: {\r\n                    brushType: 'stroke'\r\n                },\r\n                hoverAnimation: true,\r\n                label: {\r\n                    normal: {\r\n                        formatter: '{b}',\r\n                        position: 'right',\r\n                        show: true\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: 'yellow',\r\n                        shadowBlur: 10,\r\n                        shadowColor: 'yellow'\r\n                    }\r\n                },\r\n                zlevel: 1\r\n            },\r\n\r\n            ]\r\n        };\r\n        myChart.setOption(option);\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.score-map {\r\n    width: 100%;\r\n\r\n    #main {\r\n        width: 100%;\r\n        height: 500px\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScoreMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScoreMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ScoreMap.vue?vue&type=template&id=c98ba58e&scoped=true&\"\nimport script from \"./ScoreMap.vue?vue&type=script&lang=js&\"\nexport * from \"./ScoreMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ScoreMap.vue?vue&type=style&index=0&id=c98ba58e&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c98ba58e\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticClass","attrs","data","mounted","name","value","myChart","mapFeatures","geoCoordMap","console","min","minSize4Pin","res","title","text","subtext","x","textStyle","color","fontFamily","fontSize","subtextStyle","tooltip","trigger","formatter","toolTiphtml","visualMap","show","max","left","top","calculable","seriesIndex","inRange","geo","map","label","normal","emphasis","roam","itemStyle","areaColor","borderColor","series","type","coordinateSystem","symbolSize","position","geoIndex","aspectScale","showLegendSymbol","animation","symbol","b","zlevel","slice","showEffectOn","rippleEffect","brushType","hoverAnimation","shadowBlur","shadowColor","component"],"sourceRoot":""}