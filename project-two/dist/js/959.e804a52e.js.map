{"version":3,"file":"js/959.e804a52e.js","mappings":"mKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,UAAU,CAACA,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,aAAaH,EAAG,UAAU,CAACA,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,cAAc,EACzM,EACGC,EAAkB,G,WCYtB,GACAC,OACA,QAGA,EACAC,WACAC,EAAAA,EAAAA,MAAAA,MAAAA,IAEA,GADAC,QAAAA,IAAAA,GACA,qBACA,WAAAC,EAAAA,MAAAC,EAAAA,OAAAC,GAAA,YACA,gBACA,KACAC,OAAAC,IACA,UAEA,EACAC,UACA,2DACAC,EAAAA,UAAAA,CACAC,MAAAA,CACAC,KAAAA,SAEAC,QAAAA,CAAAA,EACAR,MAAAA,CAEAL,KAAAA,CAAAA,KAAAA,KAAAA,KAAAA,KAAAA,KAAAA,OAEAc,MAAAA,CAAAA,EAEAR,OAAAA,CAAAA,CACAS,KAAAA,KACAC,KAAAA,MACAhB,KAAAA,CAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,OAIA,EACAiB,QAAAA,CACAC,KAAAA,EAAAA,EAAAA,GACA,2DACA,GACAP,MAAAA,CACAC,KAAAA,OAEAC,QAAAA,CACAM,QAAAA,QAEAf,OAAAA,CACAJ,KAAAA,GAEAK,MAAAA,CACAW,KAAAA,WACAhB,KAAAA,GAEAc,MAAAA,CACAE,KAAAA,SAEAV,OAAAA,GAEAc,EAAAA,UAAAA,EACA,IC3EiQ,I,UCQ7PC,GAAY,OACd,EACA7B,EACAO,GACA,EACA,KACA,WACA,MAIF,EAAesB,EAAiB,O,oQCfzB,SAASC,EAAMtB,GAClB,OAAOuB,EAAAA,EAAAA,GAAQ,CACXC,OAAQ,OACRC,IAAK,SACLzB,KAAMA,GAEb,CAGM,SAAS0B,EAASC,GACrB,OAAOJ,EAAAA,EAAAA,GAAQ,CACXC,OAAQ,MACRC,IAAK,YACLE,OAAQA,GAEf,CAGM,SAASC,EAAWC,GACvB,OAAON,EAAAA,EAAAA,GAAQ,CACXC,OAAQ,SACRC,IAAM,aAAYI,KAEzB,CAuBM,SAASC,EAAKd,EAAMhB,GAEvBA,EAAO+B,IAAAA,UAAa/B,GACpB,IAAIgC,EAAM,CAAER,OAAQR,EAAMS,IAAK,QAASzB,QACxC,OAAOuB,EAAAA,EAAAA,GAAQS,EAClB,CAEM,SAASC,IAEZ,OAAOV,EAAAA,EAAAA,GAAQ,CACXC,OAAQ,MACRC,IAAK,SAEZ,CAEM,SAASS,EAAQL,GAEpB,OAAON,EAAAA,EAAAA,GAAQ,CACXC,OAAQ,SACRC,IAAM,SAAQI,KAErB,CAEM,SAAS3B,IACZ,OAAOqB,EAAAA,EAAAA,GAAQ,CACXC,OAAO,MACPC,IAAI,aAEX,CAEM,SAASU,IACZ,OAAOZ,EAAAA,EAAAA,GAAQ,CACXC,OAAO,MACPC,IAAI,UAEX,C","sources":["webpack://project-two/./src/components/dataAnalysis/DataView.vue","webpack://project-two/src/components/dataAnalysis/DataView.vue","webpack://project-two/./src/components/dataAnalysis/DataView.vue?dad3","webpack://project-two/./src/components/dataAnalysis/DataView.vue?d17c","webpack://project-two/./src/api/api.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"data-view\"},[_c('el-card',[_c('div',{attrs:{\"id\":\"main1\"}})]),_c('el-card',[_c('div',{attrs:{\"id\":\"main2\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"data-view\">\r\n    <el-card>\r\n      <div id=\"main1\"></div>\r\n    </el-card>\r\n    <el-card>\r\n      <div id=\"main2\"></div>\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { dataview } from \"@/api/api\";\r\nexport default {\r\n  data() {\r\n    return {\r\n\r\n    }\r\n  },\r\n  created() {\r\n    dataview().then(res => {\r\n      console.log(res)\r\n      if (res.data.status === 200) {\r\n        let { legend, xAxis, series } = res.data.data\r\n        this.draw(legend, xAxis, series)\r\n      }\r\n    }).catch(err=>{\r\n      throw err\r\n    })\r\n  },\r\n  mounted() {\r\n    let myChart = this.$echarts.init(document.getElementById('main1'))\r\n    myChart.setOption({\r\n      title: {\r\n        text: '大佬晋级版'\r\n      },\r\n      tooltip: {},\r\n      xAxis: {\r\n        //x轴\r\n        data: ['一班', '二班', '三班', '四班', '五班', '六班']\r\n      },\r\n      yAxis: {},\r\n      //y轴\r\n      series: [{\r\n        name: '人数',\r\n        type: 'bar',\r\n        data: [45, 52, 45, 12, 64, 43]\r\n      }]\r\n    })\r\n\r\n  },\r\n  methods: {\r\n    draw(legend, xAxis, series) {\r\n      let myChart1 = this.$echarts.init(document.getElementById('main2'))\r\n      let option = {\r\n        title: {\r\n          text: '会话量'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: legend\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: xAxis\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: series\r\n      }\r\n      myChart1.setOption(option)\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.data-view {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .el-card {\r\n    width: 50%;\r\n\r\n    #main1,\r\n    #main2 {\r\n      height: 500px;\r\n    }\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DataView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DataView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DataView.vue?vue&type=template&id=786edb78&scoped=true&\"\nimport script from \"./DataView.vue?vue&type=script&lang=js&\"\nexport * from \"./DataView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DataView.vue?vue&type=style&index=0&id=786edb78&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"786edb78\",\n  null\n  \n)\n\nexport default component.exports","import service from '../service.js'\r\nimport qs from 'qs'\r\n// 项目中大多数会把对应的接口请求封装成api\r\n// 登录接口\r\nexport function login(data) {\r\n    return service({\r\n        method: 'post',\r\n        url: '/login',\r\n        data: data\r\n    })\r\n}\r\n\r\n// 学生列表\r\nexport function students(params) {\r\n    return service({\r\n        method: 'get',\r\n        url: '/students',\r\n        params: params\r\n    })\r\n}\r\n\r\n//学生列表删除接口\r\nexport function studentDel(id) {\r\n    return service({\r\n        method: 'delete',\r\n        url: `/students/${id}`\r\n    })\r\n}\r\n//学生列表查询与重置本质也是渲染一边只是渲染单独的\r\n// 信息列表新增接口\r\n// export function info(data) {\r\n//     data = qs.stringify(data)\r\n//     // qs一般不用，这个后端数据需要用\r\n//     return service({\r\n//         method: 'post',\r\n//         url: '/info',\r\n//         data: data\r\n//     })\r\n// }\r\n// // 信息列表修改接口\r\n// export function updataInfo(data) {\r\n//     data = qs.stringify(data)\r\n//     // qs一般不用，这个后端数据需要用\r\n//     return service({\r\n//         method: 'put',\r\n//         url: '/info',\r\n//         data: data\r\n//     })\r\n// }\r\n// 信息修改和列表查询接口合二为一\r\nexport function Info(type, data) {\r\n    // 查询查所有不需要传参\r\n    data = qs.stringify(data)\r\n    let obj = { method: type, url: '/info', data }\r\n    return service(obj)\r\n}\r\n// 信息列表查询接口\r\nexport function getInfo() {\r\n    // 查询查所有不需要传参\r\n    return service({\r\n        method: 'get',\r\n        url: '/info',\r\n    })\r\n}\r\n// 信息列表删除接口\r\nexport function infoDel(id) {\r\n    // 查询查所有不需要传参\r\n    return service({\r\n        method: 'delete',\r\n        url: `/info/${id}`,\r\n    })\r\n}\r\n//数据概览的接口图表\r\nexport function dataview() {\r\n    return service({\r\n        method:'get',\r\n        url:'/dataview'\r\n    })\r\n}\r\n//旅游地图的接口\r\nexport function travel() {\r\n    return service({\r\n        method:'get',\r\n        url:'travel'\r\n    })\r\n}"],"names":["render","_vm","this","_c","_self","staticClass","attrs","staticRenderFns","data","created","dataview","console","legend","xAxis","series","catch","err","mounted","myChart","title","text","tooltip","yAxis","name","type","methods","draw","trigger","myChart1","component","login","service","method","url","students","params","studentDel","id","Info","qs","obj","getInfo","infoDel","travel"],"sourceRoot":""}